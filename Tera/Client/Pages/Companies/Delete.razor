@page "/Companies/delete/{Id:guid}"

@attribute [Authorize]

@inject HttpClient Http
@inject HttpClient httpClient
@inject NavigationManager Navigation

<EditForm Model="Company" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />

    <div class="shadow-sm p-3 mt-3 ml-3 mr-3 mb-3 bg-white rounded-lg mx-auto" style="width:45%">

        <div class="card-body mx-auto" style="width:67%; min-width:80%">

            <h3>Please confirm you want to delete the following company?</h3>
            <br />
            <ul class="list-group">

                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <h5 class="mb-1">
                        Company Name
                    </h5>

                    <h5 class="mb-1">
                        @Company.companyName
                    </h5>
                </li>

                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <h5 class="mb-1">
                        Company Description <br />
                        <br />
                        @Company.companyDescription

                    </h5>
                </li>
            </ul>

            <br />

            <a class="btn btn-secondary ml-2" href="/Companies">Back</a>

            <button type="submit" class="btn btn-danger">
                Delete company
            </button>

        </div>
    </div>


</EditForm>
@code {
    [Parameter]
    public Guid Id { get; set; }

    private Company Company { get; set; } = new Company();

    protected override async Task OnInitializedAsync()
    {
        try
        {

            Company = await Http.GetFromJsonAsync<Company>($"/api/Companies/{Id}");
        }

        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }

        catch (Exception e)
        {
            Console.WriteLine("Ticket index page exception caught: " + e);
        }
    }

    private async void HandleValidSubmit() //Execute on 'submit button' press
    {
        try
        {
            await Http.DeleteAsync($"/api/Companies/{Id}");

            var response = await Http.PutAsJsonAsync($"/api/Companies/{Company.CompanyId}", Company);
            response.EnsureSuccessStatusCode();

        }

        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }

        catch (Exception e)
        {
            Console.WriteLine("Ticket index page exception caught: " + e);
        }

        Navigation.NavigateTo("/Companies"); //after action go back to index page

    }

}

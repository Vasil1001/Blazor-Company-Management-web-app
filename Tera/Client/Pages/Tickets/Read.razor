@page "/Tickets/details/{Id:guid}"

@attribute [Authorize]

@inject HttpClient Http
@inject HttpClient httpClient
@inject NavigationManager Navigation

<div class="shadow-sm p-3 mt-3 ml-3 mr-3 mb-3 bg-white rounded-lg mx-auto" style="width:45%">
    <div class="card-body mx-auto" style="width:67%; min-width:55%">
        <h3 class="card-title">Details for @Ticket.Name</h3>
        <h6 class="card-subtitle mb-2 text-muted">View further details on selected ticket</h6>
        <br />

        <ul class="list-group">

            <li class="list-group-item d-flex justify-content-between align-items-center">
                <h5 class="mb-1">
                    Ticket Name
                </h5>

                <h5 class="mb-1">
                    @Ticket.Name
                </h5>
            </li>

            <li class="list-group-item d-flex justify-content-between align-items-center ">
                <h5 class="mb-1">Status </h5>
                <h5 class="mb-1">
                    @Ticket.TicketStatus
                </h5>
            </li>

            <li class="list-group-item d-flex justify-content-between align-items-center">
                <h5 class="mb-1">
                    Ticket Description <br /><br /> @Ticket.Description
                </h5>
            </li>

            <li class="list-group-item">
                <h5 class="mb-1"> Created On <br /><br /> @Ticket.TicketCreatedDate.ToShortDateString()</h5>
            </li>

            <li class="list-group-item">
                @if (Ticket.TicketStatus != "Closed")
                {
                    <h5 class="mb-1">Closed on <br /><br /></h5> <h5 class="mb-1">
                        Stil in progress
                    </h5>
                }
                else
                {
                    <h5 class="mb-1">Closed on <br /><br /></h5> <h5 class="mb-1">
                        @Ticket.ClosedDate?.ToShortDateString()
                    </h5>

                }

            </li>

        </ul>
        <br />

        <a class="btn btn-secondary" href="/Tickets">Back</a>
    </div>
</div>
@code {
    [Parameter]
    public Guid Id { get; set; }
    private List<Ticket> Tickets = new List<Ticket>();
    private Ticket Ticket { get; set; } = new Ticket();

    private List<User> Users = new List<User>();
    private User User { get; set; } = new User();


    protected override async Task OnInitializedAsync()
    {
        try
        {
            Ticket = await Http.GetFromJsonAsync<Ticket>($"/api/Tickets/{Id}");
            Tickets = await Http.GetFromJsonAsync<List<Ticket>>("/api/Tickets");


            User = await Http.GetFromJsonAsync<User>($"/api/Users/{Id}");
            Users = await Http.GetFromJsonAsync<List<User>>("/api/Users");
        }

        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }

        catch (Exception e)
        {
            Console.WriteLine("Ticket index page exception caught: " + e);
        }

    }

}
